name: Python test

# On every pull request, but only on push to master
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.6.1
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install root project
        run: poetry install --no-interaction

      - name: Run tests
        run: poetry run pytest

      - name: Check binder requirements.txt up to date
        if: matrix.python-version == 3.9
        run: |
          poetry export -f requirements.txt -o .binder/requirements.txt --without-hashes
          git diff --exit-code .binder/requirements.txt || exit 1

      - name: Cache pre-commit virtualenvs
        uses: actions/cache@v3
        if: matrix.python-version == 3.9
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-3|${{ hashFiles('.pre-commit-config.yaml') }}

      # TODO: switch this to run on e.g. 3.11 (how to get the if statement to
      # work?)
      # Run pre-commit (only for python-3.9)
      - name: run pre-commit
        if: matrix.python-version == 3.9
        run: |
          poetry run pre-commit run --show-diff-on-failure --color=always --all-files
