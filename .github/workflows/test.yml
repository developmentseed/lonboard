name: Python test

# On every pull request, but only on push to master
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # Note: this should stay synced with the volta-pinned version in
      # package.json
      - uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Cache NPM dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          # Note: this does **not** depend on the Python version in the cache
          # key
          key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/package-lock.json') }}

      - name: Install JS dependencies
        run: |
          # Note: we use ci for a "clean install", checking the lockfile
          npm ci

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.7.0
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Check Poetry lockfile up to date
        run: |
          poetry check --lock

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      # Note: we don't install the "watchfiles" group on CI because it gives
      # threading errors when running tests. See
      # https://github.com/developmentseed/lonboard/pull/234
      # https://github.com/manzt/anywidget/issues/374
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root --without watchfiles

      - name: Install root project
        run: poetry install --no-interaction --without watchfiles

      - name: Build JS bundle
        run: |
          npm run build

      - name: Run tests
        run: poetry run pytest

      - name: Run tests (all deps)
        run: |
          poetry install -E geopandas -E cli
          poetry run pytest

      # Ensure docs build without warnings
      - name: Check docs
        if: matrix.python-version == 3.9
        run: poetry run mkdocs build --strict

      - name: Cache pre-commit virtualenvs
        uses: actions/cache@v4
        if: matrix.python-version == 3.9
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-3|${{ hashFiles('.pre-commit-config.yaml') }}

      # TODO: switch this to run on e.g. 3.11 (how to get the if statement to
      # work?)
      # Run pre-commit (only for python-3.9)
      - name: run pre-commit
        if: matrix.python-version == 3.9
        run: |
          poetry run pre-commit run --show-diff-on-failure --color=always --all-files
