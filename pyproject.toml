[project]
name = "lonboard"
version = "0.10.3"
description = "Fast, interactive geospatial data visualization in Jupyter."
authors = [{ name = "Kyle Barron", email = "kyle@developmentseed.org" }]
license = "MIT"
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "anywidget~=0.9.0",
    # Version in Colab as of October 2024
    # Upgrading to 5.10 would be ideal to enable generic types
    "traitlets>=5.7.1",
    "arro3-core>=0.4.1",
    "arro3-io>=0.4.1",
    "arro3-compute>=0.4.1",
    "ipywidgets>=7.6.0",
    "numpy>=1.14",
    # The same version pin as geopandas
    "pyproj>=3.3",
    "typing-extensions~=4.6.0; python_version < '3.12'",
]
keywords = [
    "GIS",
    "cartography",
    "visualization",
    "geopandas",
    "pandas",
    "shapely",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: Jupyter",
    "Framework :: Jupyter :: JupyterLab",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: GIS",
]

[project.optional-dependencies]
cli = ["click>=8.1.7", "pyogrio>=0.8", "shapely>=2"]
geopandas = ["geopandas>=0.13", "pandas>=2", "shapely>=2"]
movingpandas = ["movingpandas>=0.17"]


[project.urls]
homepage = "https://developmentseed.org/lonboard/latest/"
documentation = "https://developmentseed.org/lonboard/latest/"
repository = "https://github.com/developmentseed/lonboard"
issues = "https://github.com/developmentseed/lonboard/issues"
changelog = "https://github.com/developmentseed/lonboard/blob/main/CHANGELOG.md"

[project.scripts]
lonboard = "lonboard._cli:main"


[dependency-groups]
docs = [
    "mkdocs-material[imaging]>=9.5.49",
    "mkdocs>=1.6.1",
    "mkdocstrings[python]>=0.26.1",
    # # This version only on 3.9+. Ok because it's a dev dependency
    # mkdocs-jupyter = { version = "^0.24.5", python = "^3.9" }
    "mkdocs-jupyter>=0.24.8",
    "mike>=2.1.3",
    "griffe-inherited-docstrings>=1.0.1",
    # We use ruff format ourselves, but mkdocstrings requires black to be
    # installed to format signatures in the docs
    "black>=24.8.0",
]
dev = [
    "duckdb>=1.2.0",
    "fiona<1.10",
    "geoarrow-pyarrow>=0.1.2",
    "geoarrow-rust-core>=0.3.0",
    "geodatasets>=2024.8.0",
    "jupyterlab>=4.3.3",
    "matplotlib>=3.7.5",
    "movingpandas>=0.20.0",
    "palettable>=3.3.3",
    "pre-commit>=3.5.0",
    "pyarrow>=17.0.0",
    "pyogrio>=0.9.0",
    "pytest>=8.3.4",
    "ruff>=0.11.0",
]
# Note: this is defined as a separate group so that it can be not installed in
# CI. See:
# https://github.com/developmentseed/lonboard/pull/234
# https://github.com/manzt/anywidget/issues/374
watchfiles = ["watchfiles>=0.24.0"]


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
only-include = ["lonboard"]
artifacts = ["lonboard/static/*.js", "lonboard/static/*.css"]

[tool.hatch.build.targets.sdist.force-include]
"MANIFEST.in" = "MANIFEST.in"

[tool.hatch.build.targets.wheel]
only-include = ["lonboard"]
artifacts = ["lonboard/static/*.js", "lonboard/static/*.css"]

[tool.hatch.build.targets.wheel.force-include]
"MANIFEST.in" = "MANIFEST.in"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed
    "B028",    # No explicit `stacklevel` keyword argument found
    "B011",    # Do not `assert False` (`python -O` removes these calls), raise `AssertionError()`
    "D100",    # Missing docstring in public module
    "D203",    # incorrect-blank-line-before-class
    "D213",    # multi-line-summary-second-line
    "D406",    # Section name should end with a newline ("Returns")Ruff
    "D407",    # Missing dashed underline after section
    "E501",    # Line too long
    "EM",      # Exception must not use a string literal, assign to variable first
    "FIX002",  # Line contains TODO, consider resolving the issue
    "PD901",   # Avoid using the generic variable name `df` for DataFrames
    "PERF401", # Use a list comprehension to create a transformed list
    "PGH003",  # Use specific rule codes when ignoring type issues
    "PGH004",  # Use specific rule codes when using `ruff: noqa`
    "PLR2004", # Magic value used in comparison
    "RUF015",  # Prefer `next(...)` over single element slice
    "S101",    # Use of `assert` detected
    "TD",      # todo
    "TRY003",  # Avoid specifying long messages outside the exception class
]

[tool.ruff.lint.per-file-ignores]
"examples/*" = [
    "A001",   # Variable `map` is shadowing a Python builtin
    "D103",   # Missing docstring in public function
    "ERA001", # Found commented-out code
    "PTH",    # pathlib
    "S113",   # Probable use of `requests` call without timeout
    "T201",   # `print` found
    "UP",
]
"lonboard/*" = [
    "PT", # pytest
]
"tests/*" = [
    "S101",    # assert
    "ANN001",  # Missing type annotation for function argument `geom`Ruff
    "ANN201",  # Missing return type annotation for public function
    "ANN202",  # Missing return type annotation for private function `it`
    "ANN204",  # Missing return type annotation for special method
    "D",       # docstring
    "PLR2004", # Magic value used in comparison, consider replacing `100` with a constant variable
    "S301",    # `pickle` and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue
    "S608",    #  Possible SQL injection vector through string-based query construction
    "SLF001",  # Private member accessed
]

[tool.ruff.lint.extend-per-file-ignores]
"__init__.py" = [
    "F401", # Allow unused imports in __init__.py files
]

[tool.uv]
constraint-dependencies = [
    # ensure lockfile grabs wheels for pyproj for each Python version
    "pyproj==3.6; python_version == '3.9'",
    "pyproj>=3.7; python_version >= '3.10'",
]
